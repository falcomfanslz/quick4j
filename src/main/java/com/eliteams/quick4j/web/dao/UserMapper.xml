<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.User" >
    <id column="userId" property="userid" jdbcType="BIGINT" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="vipFlag" property="vipflag" jdbcType="CHAR" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="regtime" property="regtime" jdbcType="TIMESTAMP" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, userName, openId, tel, sex, birthday, vipFlag, balance, regtime, password, 
    state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eliteams.quick4j.web.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userId = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.User" >
    insert into user (userId, userName, openId, 
      tel, sex, birthday, vipFlag, 
      balance, regtime, password, 
      state)
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=VARCHAR}, #{vipflag,jdbcType=CHAR}, 
      #{balance,jdbcType=DECIMAL}, #{regtime,jdbcType=TIMESTAMP}, #{password,jdbcType=CHAR}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="vipflag != null" >
        vipFlag,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="regtime != null" >
        regtime,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="vipflag != null" >
        #{vipflag,jdbcType=CHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="regtime != null" >
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.vipflag != null" >
        vipFlag = #{record.vipflag,jdbcType=CHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.regtime != null" >
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set userId = #{record.userid,jdbcType=BIGINT},
      userName = #{record.username,jdbcType=VARCHAR},
      openId = #{record.openid,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      vipFlag = #{record.vipflag,jdbcType=CHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      password = #{record.password,jdbcType=CHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.User" >
    update user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="vipflag != null" >
        vipFlag = #{vipflag,jdbcType=CHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="regtime != null" >
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.User" >
    update user
    set userName = #{username,jdbcType=VARCHAR},
      openId = #{openid,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      vipFlag = #{vipflag,jdbcType=CHAR},
      balance = #{balance,jdbcType=DECIMAL},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      password = #{password,jdbcType=CHAR},
      state = #{state,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
  </update>
   <!-- 用户登录验证查询 -->
    <select id="authentication" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from user
        where userName = #{record.username,jdbcType=VARCHAR} and password = #{record.password,jdbcType=CHAR}
    </select>
</mapper>